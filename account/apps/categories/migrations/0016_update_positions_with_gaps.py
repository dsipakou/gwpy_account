# Generated by Django 4.2.11 on 2025-03-11 19:00

from django.db import migrations


def update_positions_with_gaps(apps, schema_editor):
    """
    Updates category positions with larger gaps (100, 200, 300, etc.)
    starting from the latest position.
    """
    Category = apps.get_model("categories", "Category")
    # Get categories with no parent
    top_level_categories = Category.objects.filter(parent__isnull=True)

    for parent in top_level_categories:
        # Filter categories by parent, order by current position
        subcategories = Category.objects.filter(parent=parent).order_by("position")

        # Calculate the step size based on the number of categories
        # This ensures we have enough space between items
        num_sub_categories = subcategories.count()
        step = 100
        if num_sub_categories > 0:
            # Assign new positions with gaps
            for index, subcategory in enumerate(subcategories):
                new_position = (num_sub_categories - (index + 1)) * step
                if subcategory.position != new_position:
                    subcategory.position = new_position
                    subcategory.save()


def reverse_update_positions(apps, schema_editor):
    """
    Reverts positions back to sequential numbers (1, 2, 3, etc.)
    """
    Category = apps.get_model("categories", "Category")
    parents = Category.objects.values_list("parent", flat=True).distinct()

    for parent in parents:
        subcategories = Category.objects.filter(parent=parent).order_by("position")
        for index, subcategory in enumerate(subcategories, start=1):
            if subcategory.position != index:
                subcategory.position = index
                subcategory.save()


class Migration(migrations.Migration):
    dependencies = [
        ("categories", "0015_category_categories__parent__14ef2b_idx"),
    ]

    operations = [
        migrations.RunPython(
            code=update_positions_with_gaps,
            reverse_code=reverse_update_positions,
        ),
    ]
